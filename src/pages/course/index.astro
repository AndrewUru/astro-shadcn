---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, Grid, List } from "lucide-react";
import type { CollectionEntry } from "astro:content";

// Get all course entries
const entries = await getCollection("course");

// Get view mode from URL params, default to grid
const viewMode = Astro.url.searchParams.get("view") || "grid";

function formatDate(date: Date) {
	return new Intl.DateTimeFormat("en-US", {
		year: "numeric",
		month: "short",
		day: "numeric",
	}).format(date);
}
---

<Layout
	title="Course"
	description="Browse all available lessons"
>
	<div class="max-w-4xl mx-auto">
		<div class="flex justify-between items-center mb-8">
			<h1 class="text-4xl font-bold">Course</h1>
			<div class="flex gap-2">
				<a
					href="/course?view=grid"
					class={`p-2 rounded-md hover:bg-accent ${viewMode === 'grid' ? 'bg-accent' : ''}`}
					title="Grid view"
				>
					<Grid className="w-5 h-5" />
				</a>
				<a
					href="/course?view=list"
					class={`p-2 rounded-md hover:bg-accent ${viewMode === 'list' ? 'bg-accent' : ''}`}
					title="List view"
				>
					<List className="w-5 h-5" />
				</a>
			</div>
		</div>
		
		<div class={viewMode === 'grid' ? 'grid gap-6 sm:grid-cols-2 lg:grid-cols-3' : 'space-y-6'}>
			{entries.map((entry: CollectionEntry<"course">) => (
				<Card className={`overflow-hidden ${viewMode === 'list' ? 'flex' : ''}`}>
					<a href={`/course/${entry.slug}`} class={`block hover:opacity-80 transition-opacity ${viewMode === 'list' ? 'flex flex-1' : ''}`}>
						{entry.data.picture && viewMode === 'list' && (
							<div class="w-48 shrink-0">
								<img
									src={entry.data.picture}
									alt={entry.data.title}
									class="w-full h-full object-cover"
								/>
							</div>
						)}
						<div class="p-6 flex-1">
							<div class="flex items-center gap-2 mb-4">
								<Badge variant="secondary" client:load>
									{entry.data.type || "Course"}
								</Badge>
								<span class="text-sm text-muted-foreground flex items-center">
									<Calendar className="w-4 h-4 mr-1" client:load />
									{formatDate(new Date(entry.data.date))}
								</span>
							</div>
							<h2 class="text-2xl font-bold mb-2">{entry.data.title}</h2>
							<p class="text-muted-foreground">{entry.data.description}</p>
						</div>
						{entry.data.picture && viewMode === 'grid' && (
							<div class="aspect-video w-full">
								<img
									src={entry.data.picture}
									alt={entry.data.title}
									class="w-full h-full object-cover"
								/>
							</div>
						)}
					</a>
				</Card>
			))}
		</div>
	</div>
</Layout>
